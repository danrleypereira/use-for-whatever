map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;
    server_name forge-ui.kbra.vm localhost;

    # Access logs with custom format
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;

    # Proxy all requests to the Node.js server
    location / {
        proxy_pass http://app:3000;
        
        # Set headers for proper proxying
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support if needed
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Set reasonable timeouts
        proxy_read_timeout 120s;
        proxy_send_timeout 120s;
    }

    # Cache static assets for better performance,
    # but ensure development assets are not aggressively cached
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Ensure browser doesn't cache during development
        add_header Cache-Control "no-cache, must-revalidate, max-age=0";
        add_header Pragma "no-cache";
        expires 0;
    }

    # Security headers with relaxed CSP for styles
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https: http:; style-src 'self' 'unsafe-inline' https: http:; img-src 'self' data: https: http:; font-src 'self' data: https: http:; connect-src 'self' wss: ws: https: http:;" always;
}